{"version":3,"sources":["components/Button.js","components/Nav.js","components/Header.js","components/cards/PeopleCard.js","components/lists/PeopleList.js","components/SearchBar.js","components/cards/PlanetsCard.js","components/lists/PlanetsList.js","components/cards/FilmsCard.js","components/lists/FilmsList.js","components/cards/SpeciesCard.js","components/lists/SpeciesList.js","components/cards/VehiclesCard.js","components/lists/VehiclesList.js","components/cards/StarShipsCard.js","components/lists/StarShipsList.js","containers/Content.js","containers/App.js","serviceWorker.js","index.js"],"names":["Button","_ref","value","onButtonPress","react_default","a","createElement","className","onClick","Nav","names","Object","values","map","name","i","components_Button","key","Header","href","PeopleCard","height","mass","gender","birth_year","PeopleList","people","person","cards_PeopleCard","SearchBar","searchfield","searchChange","type","placeholder","onChange","PlanetsCard","rotation_period","orbital_period","climate","gravity","population","terrain","PlanetsList","planets","planet","cards_PlanetsCard","FilmsCard","title","episode_id","release_date","director","FilmList","films","film","cards_FilmsCard","SpeciesCard","classification","average_height","skin_colors","eye_colors","SpeciesList","species","specie","cards_SpeciesCard","homeworld","VehiclesCard","model","cost","crew","passengers","VehiclesList","vehicles","vehicle","cards_VehiclesCard","cost_in_credits","StarShipsCard","manufacturer","starship_class","StarShipsList","starships","starship","cards_StarShipsCard","Content","_Component","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSearchChange","event","setState","searchField","target","state","information","starShips","bind","assertThisInitialized","inherits","createClass","_fetchData","asyncToGenerator","regenerator_default","mark","_callee","response","data","wrap","_context","prev","next","fetch","concat","destination","sent","json","results","stop","apply","arguments","fetchData","prevProps","_this$state","filteredMenu","filter","info","toLowerCase","includes","length","components_SearchBar","lists_PeopleList","lists_PlanetsList","FilmsList","lists_SpeciesList","lists_VehiclesList","lists_StarShipsList","Component","App","homeMenu","buttonPress","_this2","then","res","keys","getData","components_Header","src_components_Nav","containers_Content","Boolean","window","location","hostname","match","ReactDOM","render","src_containers_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e8af1aa8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Button = ({value, onButtonPress}) => {\r\n    return (\r\n        <button\r\n                className=\"f3 b--green hover-bg-black-90 grow tc ma2 pa3 link bg-black-40 ba-2 b--solid br3 shadow-4 pointer\"\r\n                onClick={onButtonPress}\r\n        >\r\n            {value}\r\n        </button>\r\n    )\r\n};\r\n\r\nexport default Button;","import React from 'react';\r\nimport Button from './Button';\r\nimport './Nav.css';\r\n\r\nconst Nav = ({names, onButtonPress}) => {\r\n    return (\r\n        <div>\r\n            {\r\n                Object.values(names).map((name, i) => {\r\n                    return (\r\n                        <Button\r\n                            key={i}\r\n                            value={name}\r\n                            onButtonPress={() => onButtonPress(name)}\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default Nav;","import React from 'react';\r\nimport '../containers/App.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className=\"App-header\">\r\n            <h1>\r\n                <a\r\n                    className=\"App-link\"\r\n                    href=\"../index.js\"\r\n                >\r\n                    Star Wars API\r\n                </a>\r\n            </h1>\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst PeopleCard = ({name, height, mass, gender,birth_year}) => {\r\n    return (\r\n        <div className=\"tc fw8 black-90 bg-white-80 dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n            <h2>{name}</h2>\r\n            <p>Birth Year: {birth_year}</p>\r\n            <p>Height: {height} CM</p>\r\n            <p>Weight: {mass} KG</p>\r\n            <p>Gender: {gender}</p>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default PeopleCard;","import React from 'react';\r\nimport PeopleCard from '../cards/PeopleCard';\r\n\r\nconst PeopleList = ({people}) => {\r\n    return (\r\n        <div>\r\n            {\r\n                people.map((person, i) => {\r\n                    return (\r\n                        <PeopleCard\r\n                        key        = {i}\r\n                        name       = {people[i].name}\r\n                        birth_year = {people[i].birth_year}\r\n                        height     = {people[i].height}\r\n                        mass       = {people[i].mass}\r\n                        gender     = {people[i].gender}\r\n                        />\r\n                    );\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default PeopleList;","import React from 'react';\r\n\r\nconst SearchBar = ({searchfield, searchChange}) => {\r\n    return (\r\n        <div className='pa5'>\r\n            <input\r\n                className='pa3 ba br3 b--solid-m bg-light-silver'\r\n                type=\"search\"\r\n                placeholder=\"search \"\r\n                onChange={searchChange}\r\n            />\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default SearchBar;","import React from 'react';\r\n\r\nconst PlanetsCard = ({name, rotation_period, orbital_period, climate, gravity, population, terrain}) => {\r\n    return (\r\n        <div className=\"tc f-1 fw8 black-90 bg-white-80 dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n            <h2>{name}</h2>\r\n            <p>Rotation Period: {rotation_period}</p>\r\n            <p>Orbital Period : {orbital_period}</p>\r\n            <p>Climate : {climate}</p>\r\n            <p>Gravity :{gravity}</p>\r\n            <p>Terrain : {terrain}</p>\r\n            <p>Population : {population}</p>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default PlanetsCard;\r\n\r\n","import React from 'react';\r\nimport PlanetsCard from '../cards/PlanetsCard';\r\n\r\nconst PlanetsList = ({planets}) => {\r\n    return (\r\n        <div>\r\n            {\r\n               planets.map((planet, i )=> {\r\n                   return (\r\n                       <PlanetsCard\r\n                           key={i}\r\n                           name = {planets[i].name}\r\n                           rotation_period = {planets[i].rotation_period}\r\n                           orbital_period = {planets[i].orbital_period}\r\n                           climate = {planets[i].climate}\r\n                           gravity = {planets[i].gravity}\r\n                           terrain = {planets[i].terrain}\r\n                           population = {planets[i].population}\r\n                       />\r\n                   )\r\n               })\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default PlanetsList;","import React from 'react';\r\n\r\nconst FilmsCard = ({title, episode_id, release_date, director}) => {\r\n    return (\r\n        <div className=\"tc fw8 black-90 bg-white-80 dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n            <h2>{title}</h2>\r\n            <p>Episode : {episode_id}</p>\r\n            <p>Release Date : {release_date}</p>\r\n            <p>Director : {director}</p>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default FilmsCard;","import React from 'react';\r\nimport FilmCard from '../cards/FilmsCard';\r\n\r\nconst FilmList = ({films}) => {\r\n    return (\r\n        <div>\r\n            {\r\n                films.map((film, i) => {\r\n                    return (\r\n                        <FilmCard\r\n                            key = {i}\r\n                            title = {films[i].title}\r\n                            episode_id = {films[i].episode_id}\r\n                            release_date = {films[i].release_date}\r\n                            director = {films[i].director}\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default FilmList","import React from 'react';\r\n\r\nconst SpeciesCard = ({name, classification, average_height, skin_colors, eye_colors}) => {\r\n    return (\r\n        <div className=\"tc fw8 black-90 bg-white-80 dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n            <h2>{name}</h2>\r\n            <p>Classification: {classification}</p>\r\n            <p>Average Height: {average_height}</p>\r\n            <p>Skin Color: {skin_colors}</p>\r\n            <p>Eye Colors: {eye_colors}</p>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default SpeciesCard;","import React from 'react';\r\nimport SpeciesCard from '../cards/SpeciesCard';\r\n\r\nconst SpeciesList = ({species}) => {\r\n    return (\r\n        <div>\r\n            {\r\n                species.map((specie, i) => {\r\n                    return (\r\n                        <SpeciesCard\r\n                            key = {i}\r\n                            name = {species[i].name}\r\n                            classification = {species[i].classification}\r\n                            average_height = {species[i].average_height}\r\n                            skin_colors = {species[i].skin_colors}\r\n                            eye_colors = {species[i].eye_colors}\r\n                            homeworld = {species[i].homeworld}\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default SpeciesList","import React from 'react';\r\n\r\nconst VehiclesCard = ({name, model, cost, crew, passengers}) => {\r\n    return (\r\n        <div className=\"tc fw8 black-90 bg-white-80 dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n           <h2>{name}</h2>\r\n            <p>Model: {model}</p>\r\n            <p>Cost: {cost}</p>\r\n            <p>Crew: {crew}</p>\r\n            <p>Passengers: {passengers}</p>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default VehiclesCard;","import React from 'react';\r\nimport VehiclesCard from '../cards/VehiclesCard';\r\n\r\nconst VehiclesList = ({vehicles}) => {\r\n    return (\r\n        <div>\r\n            {\r\n                vehicles.map((vehicle,i) => {\r\n                    return (\r\n                        <VehiclesCard\r\n                            key   = {i}\r\n                            name  = {vehicles[i].name}\r\n                            model = {vehicles[i].model}\r\n                            cost  = {vehicles[i].cost_in_credits}\r\n                            crew  = {vehicles[i].crew}\r\n                            passengers = {vehicles[i].passengers}\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default VehiclesList;","import React from 'react';\r\n\r\nconst StarShipsCard = ({name, model, manufacturer, cost, starship_class}) => {\r\n    return (\r\n        <div className=\"tc fw8 black-90 bg-white-80 dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n            <h2>{name}</h2>\r\n            <p>Model: {model}</p>\r\n            <p>Manufacturer: {manufacturer}</p>\r\n            <p>Cost: {cost}</p>\r\n            <p>StarShip Class: {starship_class}</p>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default StarShipsCard;","import React from 'react';\r\nimport StarShipsCard from '../cards/StarShipsCard';\r\n\r\nconst StarShipsList = ({starships}) => {\r\n    return (\r\n        <div>\r\n            {\r\n                starships.map((starship, i) => {\r\n                    return (\r\n                        <StarShipsCard\r\n                            key = {i}\r\n                            name = {starships[i].name}\r\n                            model = {starships[i].model}\r\n                            manufacturer = {starships[i].manufacturer}\r\n                            cost = {starships[i].cost_in_credits}\r\n                            starship_class = {starships[i].starship_class}\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n};\r\nexport default StarShipsList;","import React, { Component } from 'react';\r\nimport PeopleList from \"../components/lists/PeopleList\";\r\nimport SearchBar from \"../components/SearchBar\";\r\nimport PlanetsList from \"../components/lists/PlanetsList\";\r\nimport FilmsList from \"../components/lists/FilmsList\";\r\nimport SpeciesList from \"../components/lists/SpeciesList\";\r\nimport VehiclesList from \"../components/lists/VehiclesList\"\r\nimport StarShipsList from \"../components/lists/StarShipsList\";\r\n\r\nexport class Content extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            information: [],\r\n            people: [],\r\n            planets: [],\r\n            films: [],\r\n            species: [],\r\n            vehicles: [],\r\n            starShips: [],\r\n            searchField: '',\r\n        };\r\n        this.onSearchChange = this.onSearchChange.bind(this)\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({searchField: event.target.value})\r\n    };\r\n\r\n    async fetchData(){\r\n        const response = await fetch(`https://swapi.co/api/${this.props.destination}/`);\r\n        const data = await response.json();\r\n        this.setState({information : data.results})\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.fetchData();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        // Typical usage (don't forget to compare props):\r\n        if (this.props.destination !== prevProps.destination) {\r\n            this.setState({information: []});\r\n            this.fetchData();\r\n        }\r\n    }\r\n\r\n    render (){\r\n        const {information, searchField} = this.state;\r\n        let filteredMenu = information.filter(info => {\r\n            let head;\r\n            if(info.title){\r\n                head = info.title;\r\n            } else {\r\n                head = info.name;\r\n            }\r\n            return head.toLowerCase().includes(searchField.toLowerCase())\r\n        });\r\n        if ( information.length === 0 ){\r\n            return  (\r\n                <h2>Loading</h2>\r\n            )\r\n        } else {\r\n            switch (this.props.destination) {\r\n                case 'people':\r\n                    return (\r\n                        <div>\r\n                            <SearchBar searchChange={this.onSearchChange}/>\r\n                            <PeopleList people={filteredMenu}/>\r\n                        </div>\r\n                    );\r\n                case 'planets':\r\n                    return (\r\n                        <div>\r\n                            <SearchBar searchChange={this.onSearchChange}/>\r\n                            <PlanetsList planets={filteredMenu}/>\r\n                        </div>\r\n                    );\r\n                case 'films':\r\n                    return (\r\n                        <div>\r\n                            <SearchBar searchChange={this.onSearchChange}/>\r\n                            <FilmsList films={filteredMenu}/>\r\n                        </div>\r\n                    );\r\n                case 'species':\r\n                    return (\r\n                        <div>\r\n                            <SearchBar searchChange={this.onSearchChange}/>\r\n                            <SpeciesList species={filteredMenu}/>\r\n                        </div>\r\n                    );\r\n                case 'vehicles':\r\n                    return (\r\n                        <div>\r\n                            <SearchBar searchChange={this.onSearchChange}/>\r\n                            <VehiclesList vehicles={filteredMenu}/>\r\n                        </div>\r\n                    );\r\n                case 'starships':\r\n                    return (\r\n                        <div>\r\n                            <SearchBar searchChange={this.onSearchChange}/>\r\n                            <StarShipsList starships={filteredMenu}/>\r\n                        </div>\r\n                    );\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Content;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Nav from \"../components/Nav\";\nimport Header from \"../components/Header\";\nimport Content from \"./Content\";\n\n\nclass App extends Component {\n    constructor (){\n        super();\n        this.state = {\n            homeMenu:{},\n            destination: '',\n        };\n        this.buttonPress = this.buttonPress.bind(this)\n    }\n\n    getData (){\n        fetch('https://swapi.co/api/')\n            .then(res => res.json())\n            .then(data => this.setState({ homeMenu : Object.keys(data) }));\n    }\n\n    componentDidMount(){\n        this.getData()\n    }\n\n    buttonPress (destination){\n        this.setState({destination : destination})\n    }\n\n    render() {\n        const { homeMenu, destination } = this.state;\n        return destination ?\n             (\n                <div className=\"App\">\n                    <Header/>\n                    <Nav\n                        names = {homeMenu}\n                        onButtonPress={this.buttonPress}\n                    />\n                    <Content destination = {destination}/>\n                </div>\n            )\n        :(\n\n            <div className=\"App\">\n                <Header/>\n                <Nav\n                    names = {homeMenu}\n                    onButtonPress={this.buttonPress}\n                />\n            </div>\n        )\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport 'tachyons';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}